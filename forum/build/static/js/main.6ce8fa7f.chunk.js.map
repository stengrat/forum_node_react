{"version":3,"sources":["firebase.js","dao.js","component/LikeButton/index.js","component/WrittenBy/index.js","component/Post/index.js","page/PostList/index.js","component/NavBar/4D.png","component/NavBar/index.js","page/PostForm/index.js","component/Comentario/index.js","component/Footer/4D.png","component/Footer/index.js","component/ComentarioForm/index.js","page/PostPage/index.js","component/perfilForm/index.js","component/TablePost/index.js","page/PerfilPage/index.js","page/LoginForm/index.js","page/RegistroForm/index.js","page/App/index.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","listPosts","a","query","collection","orderBy","limit","get","Promise","all","posts","docs","map","p","data","postById","id","where","post","listComentsByPostId","comentarios","getUserById","listUsuario","usuario","u","getPostByUserId","LikeButton","state","likes","addLike","newCount","setState","Button","variant","onClick","this","React","Component","WrittenBy","props","userid","console","log","useState","userName","SetUserName","useEffect","doc","then","displayName","className","triggerAlert","swal","title","text","window","location","href","icon","value","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","Post","detail","tagBadge","photoURL","setPhoto","tags","Badge","Card","style","width","data-id","uid","Body","Title","Subtitle","userId","Text","to","Link","name","email","n_coments","coments","Container","Row","Col","md","Image","src","thumbnail","Footer","PostList","filter","filterChange","bind","e","target","includes","InputGroup","size","FormControl","aria-describedby","onChange","Append","list","NavBar","buttonLogin","novoPost","currentUser","Navbar","bg","sticky","Brand","alt","logo","height","Collapse","split","add","added","update","PostForm","button","Date","params","useParams","initialState","inputs","setInputs","onInputChange","useInputs","toLocaleDateString","addPost","updatePost","Fragment","Form","Group","controlId","Label","htmlFor","Control","type","as","rows","placeholder","readOnly","Comentario","comentario","like","postid","ComentarioForm","addComentario","PostPage","match","listPost","listComentarios","length","c","info","PerfilForm","nome","sobrenome","biografia","github","nascimento","updateUsuario","TablePost","colSpan","PerfilPage","user","hidden","toogleDiv","listPostsbyUser","signOut","cardStyle","display","perfilForm","loginOut","Table","striped","bordered","hover","LoginForm","txtEmail","txtPassword","message","onUpdate","onLogin","emailVerified","obj","signInWithEmailAndPassword","response","catch","err","JSON","stringify","minHeight","maxWidth","Header","ButtonGroup","aria-label","renderLoggedIn","renderLoggedOut","RegistroForm","onCreate","txtNome","txtSobrenome","txtUsername","txtNascimento","txtGithub","robotType","randomRobot","Math","floor","random","createUserWithEmailAndPassword","sendEmailVerification","updateProfile","set","phoneNumber","renderCreateUser","PrivateRoute","component","render","children","rest","renderMethod","localStorage","reactBlogUid","Menu","App","setupAxios","onAuthStateChanged","removeItem","reactBlogUDisplayName","reactBlobUEmail","axios","defaults","baseURL","process","REACT_APP_BASE_URL","headers","exact","path","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6ce8fa7f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA7iwYa-kqc2T1bj8gtvTtPBsU1Z6L_5tc\",\r\n    authDomain: \"reactblog-90abe.firebaseapp.com\",\r\n    databaseURL: \"https://reactblog-90abe.firebaseio.com\",\r\n    projectId: \"reactblog-90abe\",\r\n    storageBucket: \"reactblog-90abe.appspot.com\",\r\n    messagingSenderId: \"117323009639\",\r\n    appId: \"1:117323009639:web:07844d0ead090128730ec2\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore(app);\r\nconst auth = firebase.auth(app);\r\n\r\nexport {db, auth};","import axios from 'axios';\r\nimport {db} from './firebase';\r\n\r\nasync function listPosts() {\r\n    const query = db.collection(\"post\")\r\n        .orderBy(\"userId\")\r\n        .limit(50);\r\n    return await query.get();\r\n}\r\n\r\nasync function list() {\r\n    let [posts] = await Promise.all([\r\n        listPosts()\r\n    ]);\r\n\r\n    //Substituo o user com base no mapa\r\n    posts = posts.docs.map(p => {\r\n        let {...post} = p.data();\r\n        return post;\r\n    });\r\n    return posts;\r\n}\r\n\r\nasync function postById(id) {\r\n    const query = db.collection(\"post\")\r\n        .where(\"uid\",\"==\", id);\r\n    return await query.get();\r\n}\r\n\r\nasync function listPost(id) {\r\n    let [post] = await Promise.all([\r\n        postById(id)\r\n    ]);\r\n    post = post.docs.map(p => {\r\n        let {...post} = p.data();\r\n        return post;\r\n    });\r\n\r\n    return post\r\n}\r\n\r\nasync function listComentsByPostId(id){\r\n    const query = db.collection(\"comentarios\")\r\n        .where(\"postid\", \"==\", id)\r\n    return await query.get();\r\n}\r\n\r\nasync function listComentarios(id) {\r\n    let [comentarios] = await Promise.all([\r\n        listComentsByPostId(id)\r\n    ]);\r\n    comentarios = comentarios.docs.map(p => {\r\n        let {...comentarios} = p.data();\r\n        return comentarios;\r\n    });\r\n\r\n    return comentarios\r\n}\r\n\r\nasync function getUserById(id){\r\n    const query = db.collection(\"usuarios\")\r\n        .where(\"uid\", \"==\", id)\r\n    return await query.get();\r\n}\r\n\r\nasync function listUsuario(id){\r\n    let [usuario] = await Promise.all([\r\n        getUserById(id)\r\n    ]);\r\n    usuario = usuario.docs.map(u => {\r\n        let {...usuario} = u.data();\r\n        return usuario;\r\n    });\r\n\r\n    return usuario\r\n}\r\n\r\nasync function getPostByUserId(id){\r\n    const query = db.collection(\"post\")\r\n        .where(\"userId\", \"==\", id)\r\n    return await query.get();\r\n}\r\n\r\nasync function listPostsbyUser(id){\r\n    let [post] = await Promise.all([\r\n        getPostByUserId(id)\r\n    ]);\r\n    post = post.docs.map(u => {\r\n        let {...post} = u.data();\r\n        return post;\r\n    });\r\n\r\n    return post\r\n}\r\n\r\nexport {list, listPost, listComentarios, listUsuario, listPostsbyUser};","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport { BiHeart } from \"react-icons/bi\";\r\nclass LikeButton extends React.Component {\r\n\r\nstate = {\r\n    likes: 0\r\n};\r\n\r\naddLike = () => {\r\n    let newCount = this.state.likes + 1;\r\n    this.setState({\r\n        likes: newCount\r\n    });\r\n}\r\n\r\nrender () {\r\n    return(\r\n        <Button variant=\"outline-info\" onClick={this.addLike}><BiHeart/> {this.state.likes}</Button>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default LikeButton;","import React, {useEffect, useState} from \"react\";\r\nimport { db } from \"../../firebase\";\r\n\r\nfunction WrittenBy(props) {\r\n\r\n    const id = props.userid\r\n    console.log(id)\r\n    let [userName, SetUserName] = useState(\"None\")\r\n    \r\n    useEffect(() => {\r\n        // trocar params por props\r\n        db.collection(\"usuarios\")\r\n            .doc(id).get().then(data => {\r\n                let usuario = data.data();\r\n                if (usuario) SetUserName(usuario.displayName)\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <address>\r\n            Escrito por <b><a className=\"text-info\">{userName}</a></b>\r\n        </address>\r\n    )\r\n}\r\n\r\nexport default WrittenBy;","import React, { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport LikeButton from \"../LikeButton\";\r\nimport WrittenBy from \"../WrittenBy\";\r\nimport swal from 'sweetalert';\r\n\r\nimport Card from 'react-bootstrap/Card'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\nimport { BiCommentDots, BiShare } from \"react-icons/bi\";\r\nimport { db } from \"../../firebase\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\n\r\nfunction Post(props) {\r\n    const post = props.data;\r\n    const detail = props.detail;\r\n    let userid = \"none\"\r\n    if(props.userid){\r\n        userid = props.userid;\r\n    }\r\n\r\n    let [userName, SetUserName] = useState(\"None\")\r\n    let [photoURL, setPhoto] = useState(\"none\")\r\n    \r\n    useEffect(() => {\r\n        // trocar params por props\r\n        db.collection(\"usuarios\")\r\n            .doc(userid).get().then(data => {\r\n                let usuario = data.data();\r\n                if (usuario) SetUserName(usuario.displayName)\r\n                if (usuario) setPhoto(usuario.photoURL)\r\n            });\r\n    }, []);\r\n\r\n\r\n    if(detail === \"card\"){\r\n        let tags = post.tags;\r\n        let tagBadge;\r\n        tagBadge = tags.map((tags) => \r\n            <Badge variant=\"info\" className=\"ml-1\">{tags}</Badge>\r\n        )\r\n\r\n        return (\r\n            <Card style={{ width: '75%' }} className=\"mt-3 shadow mx-auto\" data-id={post.uid}>\r\n                <Card.Body>\r\n                    <Card.Title>{post.title}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\"><WrittenBy userid={post.userId} /></Card.Subtitle>\r\n                    <Card.Text>\r\n                        <hr></hr>\r\n                        {post.body}\r\n                        <hr></hr>\r\n                        {tagBadge}\r\n                    </Card.Text>\r\n                    <LinkContainer to={`/post/${post.uid}`}>\r\n                        <Card.Link>Visualizar post</Card.Link>\r\n                    </LinkContainer>                \r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n\r\n    }else if(detail === \"preview\"){\r\n        return (\r\n            <Card style={{ width: '75%' }} className=\"mt-3 shadow mx-auto\" data-id={post.uid}>\r\n                <Card.Body>\r\n                    <Card.Title>{post.title}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\"><WrittenBy userid={post.name} email={post.email} /></Card.Subtitle>\r\n                    <Card.Text>\r\n                        <hr></hr>\r\n                        {post.body}\r\n                        <hr></hr>\r\n                    </Card.Text>\r\n                    <LinkContainer to={`/post/${post.uid}`}>\r\n                        <Card.Link>Visualizar post</Card.Link>\r\n                    </LinkContainer>                \r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n\r\n    }else if(detail === \"post\"){\r\n\r\n        let tags = post.tags;\r\n        let tagBadge;\r\n        tagBadge = tags.map((tags) => \r\n            <Badge variant=\"info\" className=\"ml-1\">{tags}</Badge>\r\n        )\r\n\r\n        let n_coments = props.coments\r\n        return(\r\n            <Container>\r\n                <h2 className=\"mt-4 display-4\">{post.title}</h2>\r\n                <p className=\"text-muted\">{tagBadge}</p>\r\n                <Row>\r\n                    <Col md={1}>\r\n                    <Image className=\"ml-3\" src={photoURL} thumbnail width=\"100%\"/>\r\n                    </Col>\r\n                    <Col md={11}>\r\n                    <Card style={{ width: '95%' }} className=\"shadow mx-1\">\r\n                    <Card.Body>\r\n                        <dl className=\"row text-muted mb-0 pb-0\">\r\n                            <dt className=\"col-sm-9\">{userName}</dt>\r\n                            <dd className=\"col-sm-3 text-right\">{post.data}</dd>\r\n                        </dl>\r\n                    </Card.Body>\r\n                    <hr></hr>\r\n                    <Card.Body>\r\n                        <p>\r\n                            {post.body}\r\n                        </p>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">\r\n                        <dl className=\"row text-muted mb-0 pb-0\">\r\n                            <dd className=\"col-sm-9 text-right my-auto\"><Button variant=\"outline-info\" onClick={triggerAlert}><BiShare/></Button></dd>\r\n                            <dd className=\"col-sm-2 text-center my-auto\"><LikeButton></LikeButton></dd>\r\n                            <dd className=\"col-sm-1 text-right my-auto\"><BiCommentDots/> {n_coments}</dd>\r\n                        </dl>\r\n                        \r\n                    </Card.Footer>\r\n                    </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }else{\r\n        return(<h3 className=\"text-danger\">Erro</h3>)\r\n    }\r\n    \r\n}\r\n\r\nfunction triggerAlert(){\r\n    swal({\r\n        title: \"Copie e compartilhe\", \r\n        text: window.location.href, \r\n        icon: \"info\",\r\n        value: window.location.href\r\n    }).then((value) => {\r\n        const textField = document.createElement('textarea');\r\n        textField.innerText = window.location.href;\r\n        document.body.appendChild(textField);\r\n        textField.select();\r\n        document.execCommand('copy');\r\n        textField.remove();\r\n        swal(\"Link Copiado\", \"\", \"success\")\r\n    })\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport {list} from \"../../dao\";\r\nimport Post from '../../component/Post';\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nclass PostList extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            filter: \"\"\r\n        };\r\n        this.filterChange = this.filterChange.bind(this);\r\n    }\r\n\r\n    filterChange(e) {\r\n        this.setState(\r\n            {\r\n                filter: e.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let {posts, filter} = this.state;\r\n\r\n        if (filter) {\r\n            posts = posts.filter(({title=\"\"}) => title.includes(filter));\r\n        }\r\n        return (\r\n            <Container>\r\n            <div>\r\n                <h1 className=\"text-center my-4\"> Bem vindo ao Fórum forDevs!</h1>\r\n                <h4 className=\"text-center\">Se você precisar de ajuda, utilize o filtro abaixo para localizar o assunto que está pesquisando</h4>\r\n            </div>\r\n            <div>\r\n                <div className=\"my-5 text-center col-sm-8 mx-auto\">\r\n                <InputGroup className=\"mb-3\" size=\"lg\">\r\n                    <FormControl\r\n\r\n                        aria-describedby=\"basic-addon2\"\r\n                        value={this.state.filter}\r\n                        onChange={this.filterChange}\r\n                    />\r\n                    <InputGroup.Append>\r\n                    <Button variant=\"secondary\">Filtrar</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n                </div>\r\n                <div>\r\n                    {posts.map(\r\n                        p => <Post key={p.id} data={p} detail={'card'} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        list().then(posts => {\r\n            this.setState({posts: posts })\r\n        });\r\n    }\r\n}\r\n\r\nexport default PostList;","export default __webpack_public_path__ + \"static/media/4D.22a50857.png\";","import React from 'react'\r\nimport swal from 'sweetalert';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport logo from './4D.png';\r\nimport { auth } from '../../firebase';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nconst NavBar = () => {\r\n    \r\n\r\n    let buttonLogin = <Button variant=\"info\" className=\"btn btn-sm mx-1\">Login</Button>\r\n    let novoPost = <Button variant=\"outline-info\" className=\"btn btn-sm mx-1\" onClick={triggerAlert}>Novo Post</Button>\r\n\r\n    if (auth.currentUser){\r\n        buttonLogin = <Button variant=\"info\" className=\"btn btn-sm mx-1\">Perfil</Button>\r\n        novoPost = (\r\n            <LinkContainer to=\"/posts/new\">\r\n                <Button variant=\"outline-info\" className=\"btn btn-sm mx-1\">Novo Post</Button>\r\n            </LinkContainer>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <Navbar.Brand href=\"/\" className=\"mx-5\">\r\n                <img\r\n                    alt=\"\"\r\n                    src={logo}\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{' '}\r\n                forDevs\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                {novoPost}\r\n                <LinkContainer to=\"/login\">\r\n                    {buttonLogin}\r\n                </LinkContainer>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nfunction triggerAlert(){\r\n    swal(\"Ops!!\", \"Você precisa estar logado para criar posts\", \"error\")\r\n}\r\n\r\nexport default NavBar;","import React, {useState, useEffect} from 'react'\r\nimport {db, auth} from \"../../firebase\";\r\nimport Post from \"../../component/Post\"\r\nimport {useParams} from \"react-router-dom\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport swal from 'sweetalert';\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport NavBar from '../../component/NavBar';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nfunction useInputs(initialState = {}) {\r\n    const [inputs, setInputs] = useState(initialState);\r\n\r\n    const onInputChange = (e) => {\r\n        setInputs({\r\n           ...inputs,\r\n           [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    return {\r\n        inputs,\r\n        setInputs,\r\n        onInputChange\r\n    };\r\n}\r\n\r\nasync function addPost(post) {\r\n    post.tags = post.tags.split(\" \");\r\n    let {uid} = auth.currentUser;\r\n\r\n    let added = await db.collection(\"post\").add({\r\n        userId: uid,\r\n        ...post\r\n    });\r\n    \r\n    post.uid = added.id;\r\n    await db.collection(\"post\").doc(added.id).update({\r\n        userId: uid,\r\n        ...post\r\n    })\r\n\r\n    swal(\"Adicionado post \", post.title, \"success\");\r\n}\r\n\r\nasync function updatePost(post, id){\r\n    let {uid} = auth.currentUser;\r\n\r\n    post.uid = id\r\n    let update = await db.collection(\"post\").doc(id).update({\r\n        userId: uid,\r\n        ...post\r\n    })\r\n    \r\n    swal(\"Atualizado post \", post.title, \"success\");\r\n}\r\n\r\nfunction PostForm(props) {\r\n\r\n    let data = new Date();\r\n    let params = useParams();\r\n    let {id} = params\r\n    let {inputs, setInputs, onInputChange} = useInputs(\r\n        {\r\n            title: \"\",\r\n            body: \"\",\r\n            tags: \"\",\r\n            data: data.toLocaleDateString(),\r\n            uid: id\r\n        }\r\n    );\r\n    \r\n    useEffect(() => {\r\n        const {id} = params;\r\n        if (id === 'new') {\r\n            return;\r\n        }\r\n\r\n        db.collection(\"post\")\r\n            .doc(id).get().then(data => {\r\n                let post = data.data();\r\n                if (post) setInputs(post);\r\n            });\r\n    }, []);\r\n\r\n    var button;\r\n    if(id === \"new\"){\r\n       button = <Button onClick={() => addPost(inputs)}>enviar</Button>\r\n\r\n    }else{\r\n        button =<Button onClick={() => updatePost(inputs, id)}>update</Button>\r\n    \r\n    }\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <NavBar></NavBar>\r\n        <Container className=\"mb-5\">\r\n            <h1 className=\"mt-5\">Criar/Editar Post</h1>\r\n            <hr className=\"mb-5\"></hr>\r\n            <Row>                \r\n                <Col className=\"col-sm-12 col-md-6\">\r\n                    <Form.Group controlId=\"formTitulo\">\r\n                        <Form.Label><label htmlFor=\"txtTitle\">Título</label></Form.Label>\r\n                        <Form.Control type=\"text\" name=\"title\" value={inputs.title} onChange={onInputChange}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        Coloque o título do seu Post.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <hr></hr>\r\n                    <Form.Group controlId=\"formBody\">\r\n                        <Form.Label><label htmlFor=\"txtBody\">Corpo</label></Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"10\" name=\"body\" value={inputs.body} onChange={onInputChange}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        Escreva o corpo do seu Post.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <hr></hr>\r\n                    <Form.Group controlId=\"formTags\">\r\n                        <Form.Label><label htmlFor=\"txtTags\">Tags</label></Form.Label>\r\n                        <Form.Control name=\"tags\" value = {inputs.tags} type=\"text\" onChange={onInputChange}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        Adicione as tags referentes.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <hr></hr>\r\n                    <Form.Group controlId=\"formUid\">\r\n                        <Form.Label><label htmlFor=\"txtId\">Uid</label></Form.Label>\r\n                        <Form.Control name=\"txtId\" type=\"text\" placeholder={id} readOnly />\r\n                    </Form.Group>\r\n                    {button}\r\n                    <LinkContainer to=\"/\" className=\"mx-3\">\r\n                        <Button variant=\"outline-danger\">Fechar</Button>\r\n                    </LinkContainer>  \r\n                </Col>\r\n\r\n                <Col className=\"col-sm-12 col-md-6\">\r\n                    <h3 className=\"ml-5 pl-5\">Preview</h3>\r\n                    <div>\r\n                        <Post data={{name: \"Undefined\", ...inputs}} detail=\"preview\" />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PostForm;","import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\n\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nfunction Comentario(props) {\r\n    const comentario = props.data;\r\n    let userid = \"none\";\r\n    if(props.userid){\r\n        userid = props.userid\r\n    }\r\n\r\n    console.log(userid)\r\n\r\n    let [userName, SetUserName] = useState(\"None\")\r\n    let [photoURL, setPhoto] = useState(\"none\")\r\n    \r\n    useEffect(() => {\r\n        // trocar params por props\r\n        db.collection(\"usuarios\")\r\n            .doc(userid).get().then(data => {\r\n                let usuario = data.data();\r\n                if (usuario) SetUserName(usuario.displayName)\r\n                if (usuario) setPhoto(usuario.photoURL)\r\n            });\r\n    }, []);\r\n    \r\n    return (\r\n        <Container className=\"mt-3 mb-3\">\r\n            <Row>\r\n                <Col md={1}>\r\n                <Image className=\"ml-3\" src={photoURL} thumbnail width=\"100%\"/>\r\n                </Col>\r\n                <Col md={11}>\r\n                <Card style={{ width: '95%' }} className=\"shadow mx-1\">\r\n                    <Card.Body>\r\n                        <dl className=\"row text-muted mb-0 pb-0\">\r\n                            <dt className=\"col-sm-9\">{userName}</dt>\r\n                            <dd className=\"col-sm-3 text-right\">{comentario.data}</dd>\r\n                        </dl>\r\n                    </Card.Body>\r\n                    <hr></hr>\r\n                    <Card.Body>\r\n                        <p>\r\n                            {comentario.body}\r\n                        </p>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">\r\n                        Likes {comentario.like}\r\n                    </Card.Footer>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Comentario;","export default __webpack_public_path__ + \"static/media/4D.22a50857.png\";","import React from 'react'\r\nimport logo from './4D.png';\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FaGithub } from \"react-icons/fa\";\r\n\r\nimport './index.css'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className=\"footer text-white\">\r\n            <Container>\r\n                <dl className=\"row\">\r\n                    <dd className=\"col-sm-4 my-auto\">\r\n                        <p className=\"lead\">Fórum criado para a matéria de <br></br>\r\n                        Tecnologias Web Prof. Vinicius <br></br>\r\n                        utilizando ReactJS e Firebase. <br></br>\r\n                        Download do projeto abaixo</p>\r\n                        <Button variant=\"outline-info\" target=\"_blank\" href=\"https://github.com/RicardoTaverna/forum_node_react\"><FaGithub/></Button>\r\n                    </dd>\r\n                    <dd className=\"col-sm-4 text-center\">\r\n                        <h4>Fórum</h4>\r\n                        <img\r\n                            alt=\"\"\r\n                            src={logo}\r\n                            width=\"60\"\r\n                            height=\"60\"\r\n                            className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                        <h3>forDevs</h3>\r\n                    </dd>\r\n                    <dt className=\"col-sm-4 text-right my-auto\">\r\n                        <p>Ricardo Taverna</p>\r\n                        <p>Ygor Stengrat</p>\r\n                    </dt>\r\n                </dl>\r\n                <hr className=\"footerline\"></hr>\r\n                <p className=\"text-center small\">Tecnologias Web &copy; 2020 All rights reserved</p>\r\n                \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport { db, auth } from '../../firebase';\r\nimport swal from 'sweetalert';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction useInputs(initialState = {}){\r\n    const [inputs, setInputs] = useState(initialState);\r\n    const onInputChange = (e) => {\r\n        setInputs({\r\n            ...inputs,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    return {\r\n        inputs,\r\n        setInputs,\r\n        onInputChange\r\n    };\r\n}\r\n\r\nasync function addComentario(comentario){\r\n    let {uid} = auth.currentUser;\r\n    console.log(comentario.postid)\r\n    let added = await db.collection(\"comentarios\").add({\r\n        userid: uid,\r\n        ...comentario\r\n    })\r\n    swal(\"Adicionado: \" + added.id, \"\", \"success\");\r\n}\r\n\r\nfunction ComentarioForm(props){\r\n    let data = new Date();\r\n    const postid = props.postid\r\n    let {inputs, setInputs, onInputChange} = useInputs({\r\n        body: \"\",\r\n        postid: postid,\r\n        like: 0,\r\n        data: data.toLocaleDateString()\r\n    });\r\n\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <Container className=\"mt-5\">\r\n            <hr></hr>\r\n                <h2>Adicionar Comentário</h2>\r\n                <Form.Group controlId=\"formBody\">\r\n                    <Form.Label><label htmlFor=\"txtBody\">Comentário</label></Form.Label>\r\n                    <Form.Control as=\"textarea\" rows=\"5\" name=\"body\" value={inputs.body} onChange={onInputChange}/>\r\n                    <Form.Text className=\"text-muted\">\r\n                    Escreva o seu Comentário.\r\n                    </Form.Text>\r\n                    <Button variant=\"info\" className=\"mt-5\" onClick={() => addComentario(inputs)}>Adicionar</Button>\r\n                </Form.Group>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default ComentarioForm;","import React from 'react';\r\nimport Post from '../../component/Post';\r\nimport Comentario from '../../component/Comentario';\r\nimport {listPost, listComentarios} from '../../dao';\r\nimport NavBar from '../../component/NavBar';\r\nimport Footer from '../../component/Footer';\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport ComentarioForm from '../../component/ComentarioForm';\r\n\r\n\r\nclass PostPage extends React.Component\r\n{\r\n    state = {\r\n        post: [],\r\n        comentarios: [],\r\n    }\r\n\r\n    componentDidMount(){\r\n        let id = this.props.match.params.id;\r\n        listPost(id).then(post => {\r\n            this.setState({ \r\n                post: post\r\n            })\r\n        });\r\n        listComentarios(id).then(comentarios => {\r\n            this.setState({ comentarios: comentarios })\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        let {post} = this.state;\r\n        let {comentarios} = this.state;\r\n        \r\n        let comentario = \"\"\r\n        if(comentarios.length > 0){\r\n            comentario = comentarios.map(\r\n                c => <Comentario key={c.id} data={c} userid={c.userid}/>\r\n            )\r\n        }else{\r\n            comentario = <h4 className=\"text-center mt-5 mb-5\">Ainda não há comentários nesse post. Seja o primeiro a comentar!</h4>\r\n        }\r\n        let id = this.props.match.params.id;\r\n       \r\n        return(\r\n            <React.Fragment>\r\n                <NavBar></NavBar>\r\n                <Container>\r\n                    {post.map(\r\n                        p => <Post key={p.id} data={p} detail={'post'} coments={comentarios.length} userid={p.userId}/>\r\n                    )}\r\n                </Container>\r\n                <Container>\r\n                    {comentario}\r\n                </Container>\r\n                <Container className=\"mt-3\">\r\n                    <ComentarioForm postid={id}></ComentarioForm>\r\n                </Container>\r\n                <Footer></Footer>\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n    \r\n}\r\n\r\nexport default PostPage;","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../../firebase';\r\nimport swal from 'sweetalert';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction useInputs(initialState = {}){\r\n    const [inputs, setInputs] = useState(initialState);\r\n    const onInputChange = (e) => {\r\n        setInputs({\r\n            ...inputs,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    return {\r\n        inputs,\r\n        setInputs,\r\n        onInputChange\r\n    };\r\n}\r\n\r\nasync function updateUsuario(info, id){\r\n    let added = await db.collection(\"usuarios\").doc(id).update({\r\n        ...info\r\n    })\r\n    swal(\"Usuario atualizado\", \"\", \"success\");\r\n}\r\n\r\nfunction PerfilForm(props){\r\n    const id = props.id\r\n    let {inputs, setInputs, onInputChange} = useInputs({\r\n        nome: \"\",\r\n        sobrenome: \"\",\r\n        biografia: \"\",\r\n        github: \"\",\r\n        nascimento: \"\",\r\n        photoURL: \"\"\r\n    });\r\n    \r\n    useEffect(() => {\r\n        // trocar params por props\r\n        const {uid} = auth.currentUser;\r\n        db.collection(\"usuarios\")\r\n            .doc(uid).get().then(data => {\r\n                let usuario = data.data();\r\n                if (usuario) setInputs(usuario);\r\n            });\r\n    }, []);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Container className=\"mt-5\">\r\n            <hr></hr>\r\n                <h2 className=\"mb-3\">Atualizar cadastro</h2>\r\n                <Form.Group controlId=\"formGithub\">\r\n                    <Form.Label>URL da imagem</Form.Label>\r\n                    <Form.Control placeholder=\"URL da sua foto\" type=\"txt\" name=\"photoURL\" value={inputs.photoURL} onChange={onInputChange}/>\r\n                </Form.Group>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Nome</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Nome\" name=\"nome\" value={inputs.nome} onChange={onInputChange} /> \r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formBasicSobrenome\">\r\n                        <Form.Label>Sobrenome</Form.Label>\r\n                            <Form.Control  type=\"text\" placeholder=\"Sobrenome\" name=\"sobrenome\" value={inputs.sobrenome} onChange={onInputChange} /> \r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId=\"formGithub\">\r\n                    <Form.Label>Usuario Github</Form.Label>\r\n                    <Form.Control placeholder=\"Conta do Github\" type=\"email\" name=\"github\" value={inputs.github} onChange={onInputChange}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formNascimento\">\r\n                    <Form.Label>Data Nascimento</Form.Label>\r\n                    <Form.Control placeholder=\"Data de Nascimento\" type=\"date\" name=\"nascimento\" value={inputs.nascimento} onChange={onInputChange}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBiografia\">\r\n                    <Form.Label>Biografia</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={5} placeholder=\"Biografia...\" name=\"biografia\" value={inputs.biografia} onChange={onInputChange}/>\r\n                </Form.Group>\r\n                <Button variant=\"info\" className=\"mt-3 mb-3\" onClick={() => updateUsuario(inputs, id)}>Atualizar</Button>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default PerfilForm;\r\n","import React from \"react\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\n\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction TablePost(props){\r\n    const post = props.data\r\n    return (\r\n        <>\r\n            <tbody>\r\n                <tr>\r\n                    <td colSpan=\"2\" className=\"text-center\">{post.uid}</td>\r\n                    <td colSpan=\"2\" className=\"text-center\">{post.title}</td>\r\n                    <td colSpan=\"2\" className=\"text-center\">{post.data}</td>\r\n                    <td colSpan=\"2\" className=\"text-center\">\r\n                        <LinkContainer to={`/posts/${post.uid}`}>\r\n                            <Button variant=\"outline-info\"><BiEditAlt/> Editar</Button>\r\n                        </LinkContainer>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </>  \r\n    )\r\n}\r\n\r\nexport default TablePost;","import React from 'react';\r\n\r\nimport NavBar from '../../component/NavBar';\r\nimport PerfilForm from '../../component/perfilForm';\r\nimport {auth} from '../../firebase';\r\nimport {listPostsbyUser, listUsuario} from '../../dao';\r\nimport { RiLogoutBoxLine, RiGithubFill, RiMailLine, RiQuillPenLine, RiCalendarTodoFill } from \"react-icons/ri\";\r\nimport TablePost from '../../component/TablePost';\r\nimport swal from 'sweetalert';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nclass PerfilPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const userid = props.userid\r\n        this.state = {\r\n            userid: userid,\r\n            user: [],\r\n            hidden: 'none',\r\n            post: []\r\n        }\r\n        \r\n        this.toogleDiv = this.toogleDiv.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        listUsuario(this.state.userid).then(user => {\r\n            this.setState({ user: user })\r\n        });\r\n        listPostsbyUser(this.state.userid).then(post => {\r\n            this.setState({ post: post})\r\n            console.log(post)\r\n        })\r\n    }\r\n    \r\n    loginOut(){\r\n        auth.signOut().then(\r\n            swal('Realizado logout', \"Volte mais vezes e compartilhe conhecimento\", \"info\")\r\n            \r\n        )\r\n        document.location = '/';\r\n    }\r\n\r\n    toogleDiv() {\r\n        if(this.state.hidden == \"none\"){\r\n            this.setState({\r\n                hidden: 'block'\r\n            })\r\n        }else{\r\n            this.setState({\r\n                hidden: 'none'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayName;\r\n        let nome;\r\n        let sobrenome;\r\n        let biografia;\r\n        let github;\r\n        let email;\r\n        let nascimento;\r\n        let photoURL;\r\n\r\n        this.state.user.map(\r\n           user => {\r\n                displayName = user.displayName;\r\n                nome =  user.nome;\r\n                sobrenome = user.sobrenome;\r\n                biografia = user.biografia;\r\n                github = user.github;\r\n                email = user.email;\r\n                nascimento = user.nascimento;\r\n                photoURL = user.photoURL;\r\n           }\r\n        )\r\n\r\n        let cardStyle = {\r\n            display: this.state.hidden\r\n        };\r\n\r\n        let {uid} = auth.currentUser;\r\n\r\n        const perfilForm = <PerfilForm id={uid}></PerfilForm>\r\n        \r\n        let {post} = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <NavBar></NavBar>\r\n                <Container className=\"mb-5\">\r\n                    <div className=\"\">\r\n                        <div className=\"card card-profile shadow mt-5 \">\r\n                            <Row>\r\n                                <Col md={4}>\r\n                                    <Image src={photoURL}  className=\"mx-5 my-5\"  width=\"75%\" height=\"75%\" thumbnail />\r\n                                    <div className=\"text-left ml-5\">\r\n                                        <h3>{displayName}</h3>\r\n                                        <p>{nome} <b>{sobrenome}</b></p>\r\n                                        <h5><RiLogoutBoxLine/><a className=\"text-info\" onClick={this.loginOut}> logout</a></h5>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={8}>\r\n                                    <div className=\"text-left ml-5 mt-5 pl-5\">\r\n                                        <h5><RiGithubFill/> {github}</h5>\r\n                                        <h5><RiMailLine/> {email}</h5> \r\n                                        <h5><RiCalendarTodoFill/> {nascimento}</h5>\r\n                                        <hr></hr>\r\n                                        <h5><RiQuillPenLine/></h5>\r\n                                        <p className=\"text-muted\">{biografia}</p>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-2\"></hr>                            \r\n                            <Button variant=\"outline-info\" className=\"mx-auto mb-2\" onClick={this.toogleDiv} >Atualizar Perfil</Button>\r\n                            <div style={cardStyle}>\r\n                                {perfilForm}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Card className=\"shadow mt-5\">\r\n                        <Card.Body>\r\n                            <Card.Title className=\"text-center\">\r\n                                Posts Criados\r\n                            </Card.Title>\r\n                            <Table striped bordered hover className=\"pb-0 mb-0\">\r\n                                <thead>\r\n                                    <tr className=\"bg-info text-white\">\r\n                                        <th colSpan=\"2\" className=\"text-center\">Id</th>\r\n                                        <th colSpan=\"2\" className=\"text-center\">Título</th>\r\n                                        <th colSpan=\"2\" className=\"text-center\">Data</th>\r\n                                        <th colSpan=\"2\" className=\"text-center\">Editar</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                { post.map(\r\n                                    p => <TablePost data={p}></TablePost>\r\n                                )}\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default PerfilPage;","import React, {useEffect} from 'react';\r\nimport './LoginForm.css'\r\nimport NavBar from '../../component/NavBar';\r\nimport {auth} from '../../firebase';\r\nimport {listUsuario} from '../../dao';\r\nimport Footer from '../../component/Footer';\r\nimport PerfilPage from '../../page/PerfilPage';\r\nimport swal from 'sweetalert';\r\n\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: \"\",\r\n            txtEmail: \"\",\r\n            txtPassword: \"\",\r\n            message: \".\",\r\n            uid: \"\"\r\n        }\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n        this.onLogin = this.onLogin.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(auth.currentUser){\r\n            let {uid} = auth.currentUser;\r\n            let {emailVerified} = auth.currentUser;\r\n            if (emailVerified){\r\n                console.log(\"passei aqui\")\r\n                listUsuario(uid).then(user => {\r\n                    this.setState({ user: user })\r\n                })\r\n                this.setState({\r\n                    uid: uid\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidCatch(){\r\n        if(auth.currentUser){\r\n            let {uid} = auth.currentUser;\r\n            let {emailVerified} = auth.currentUser;\r\n            if (emailVerified){\r\n                console.log(\"passei aqui\")\r\n                listUsuario(uid).then(user => {\r\n                    this.setState({ user: user })\r\n                })\r\n                this.setState({\r\n                    uid: uid\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    renderLoggedIn() {\r\n        let uid = this.state.uid;\r\n\r\n        return (\r\n            <PerfilPage userid = {uid}></PerfilPage>\r\n        );\r\n    }\r\n\r\n    onUpdate(e) {\r\n        let obj = {};\r\n        obj[e.target.name] = e.target.value;\r\n        this.setState(obj)\r\n    }\r\n\r\n    onLogin() {\r\n        let {txtEmail, txtPassword} = this.state;\r\n\r\n        auth.signInWithEmailAndPassword(txtEmail, txtPassword)\r\n            .then(response => {\r\n                let {user} = response;\r\n                if (!user.emailVerified) {\r\n                    this.setState({message: \"Seu e-mail ainda não foi verificado!\"});\r\n                    swal(\"Ops\", this.state.message, \"error\")\r\n                    return;\r\n                }\r\n                this.setState({\r\n                    user: user,\r\n                    uid: user.uid\r\n                })\r\n            }).catch(err => {\r\n                this.setState({message: JSON.stringify(err)});\r\n                swal(this.state.message)\r\n            });\r\n    }\r\n\r\n    renderLoggedOut() {\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n            <NavBar></NavBar>\r\n\r\n            <div  className=\"image\">\r\n                <div>{this.state.message}</div>\r\n                <Container className=\"d-flex align-itens-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n                    <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                        <Card className=\"loginForm shadow-lg text-center mx-auto my-5\">\r\n                            <Card.Header>\r\n                                <ButtonGroup aria-label=\"Basic example\">\r\n                                    <Button variant=\"secondary\">Login</Button>\r\n                                    <LinkContainer to=\"/registro\">\r\n                                        <Button variant=\"outline-secondary\">Registrar</Button>\r\n                                    </LinkContainer>\r\n                                </ButtonGroup>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"my-3\">Login</Card.Title>\r\n                                <Card.Text>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Control type=\"email\" placeholder=\"E-mail\" name=\"txtEmail\" value={this.state.txtEmail} onChange={this.onUpdate} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Control placeholder=\"Senha\" type=\"password\" name=\"txtPassword\" value={this.state.txtPassword} onChange={this.onUpdate}/>\r\n                                    </Form.Group>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Body>\r\n                                <Button variant=\"info\" onClick={this.onLogin}>Realizar Login</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n            <Footer></Footer>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.user)\r\n        return this.state.user ? this.renderLoggedIn() : this.renderLoggedOut();\r\n\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport NavBar from '../../component/NavBar';\r\nimport Footer from '../../component/Footer';\r\nimport {auth, db} from '../../firebase';\r\nimport swal from 'sweetalert';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nclass RegistroForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: null,\r\n            txtEmail: \"\",\r\n            txtPassword: \"\",\r\n            message: \".\"\r\n        }\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n        this.onCreate = this.onCreate.bind(this);\r\n    }\r\n\r\n\r\n\r\n    onUpdate(e) {\r\n        let obj = {};\r\n        obj[e.target.name] = e.target.value;\r\n        this.setState(obj)\r\n    }\r\n\r\n    onCreate() {\r\n        let {txtEmail, txtPassword, txtNome, txtSobrenome, txtUsername, txtNascimento, txtGithub} = this.state;\r\n\r\n        let robotType = [\r\n            '?set=set1','?set=set2', '?set=set3', '?set=set4', '?set=set5'\r\n        ];\r\n        let randomRobot = robotType[Math.floor(Math.random()*robotType.length)];\r\n        console.log(randomRobot)\r\n\r\n        auth.createUserWithEmailAndPassword(txtEmail, txtPassword)\r\n            .then( response => {\r\n                auth.currentUser.sendEmailVerification().then(() => {\r\n                    let {user} = response;\r\n                    user.updateProfile({\r\n                        displayName: txtUsername,\r\n                        photoURL: \"https://robohash.org/\"+ user.email + randomRobot\r\n                    }).then(() => {\r\n                        console.log(user.uid)\r\n                        db.collection(\"usuarios\").doc(user.uid).set({\r\n                            nome: txtNome,\r\n                            sobrenome: txtSobrenome,\r\n                            displayName: user.displayName,\r\n                            nascimento: txtNascimento,\r\n                            github: txtGithub,\r\n                            uid: user.uid,\r\n                            email: user.email,\r\n                            phoneNumber: user.phoneNumber,\r\n                            photoURL: user.photoURL,\r\n                            biografia: \"\"\r\n                        })\r\n                        \r\n                    })\r\n                    this.setState({message: \"Usuário \" + txtUsername + \" criado!\"});\r\n                    swal(this.state.message, \"Verifique seu e-mail!\", \"success\")\r\n                }).catch(() => {\r\n                    this.setState({message: \"Não foi possível enviar o e-mail de verificação.\"});\r\n                    swal(this.state.message)\r\n                })\r\n            }).catch(err => {\r\n                this.setState({message: err.message});\r\n                swal(this.state.message)\r\n        });\r\n    }\r\n\r\n    renderCreateUser(){\r\n        return (\r\n            <React.Fragment>\r\n            <NavBar></NavBar>            \r\n           \r\n            <div className=\"image\">\r\n                <Container className=\"d-flex align-itens-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n                    <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                        <Card className=\"loginForm shadow-lg text-center mx-auto my-5 mb-5\">\r\n                            <Card.Header>\r\n                                <ButtonGroup aria-label=\"Basic example\">\r\n                                    <LinkContainer to=\"/login\">\r\n                                        <Button variant=\"outline-secondary\">Login</Button>\r\n                                    </LinkContainer> \r\n                                    <Button variant=\"secondary\">Registrar</Button>\r\n                                </ButtonGroup>                    \r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"my-3\">Registrar</Card.Title>\r\n                                <Card.Text>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group controlId=\"formBasicName\">\r\n                                                <Form.Control type=\"text\" placeholder=\"Nome\" name=\"txtNome\" value={this.state.txtNome} onChange={this.onUpdate} /> \r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Group controlId=\"formBasicSobrenome\">\r\n                                                <Form.Control  type=\"text\" placeholder=\"Sobrenome\" name=\"txtSobrenome\" value={this.state.txtSobrenome} onChange={this.onUpdate} /> \r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Form.Group controlId=\"formBasicUsername\">\r\n                                        <Form.Control type=\"text\" placeholder=\"Username\" name=\"txtUsername\" value={this.state.txtUsername} onChange={this.onUpdate} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Control type=\"email\" placeholder=\"E-mail\" name=\"txtEmail\" value={this.state.txtEmail} onChange={this.onUpdate} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Control placeholder=\"Senha\" type=\"password\" name=\"txtPassword\" value={this.state.txtPassword} onChange={this.onUpdate}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formGithub\">\r\n                                        <Form.Control placeholder=\"github.com/\" type=\"email\" name=\"txtGithub\" value={this.state.txtGithub} onChange={this.onUpdate}/>\r\n                                        <Form.Text className=\"text-muted text-left text-small\">\r\n                                            Adicione apenas seu usuario do github\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formNascimento\">\r\n                                        <Form.Control placeholder=\"Data de Nascimento\" type=\"date\" name=\"txtNascimento\" value={this.state.txtNascimento} onChange={this.onUpdate}/>\r\n                                    </Form.Group>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Body>\r\n                                <Button variant=\"info\" onClick={this.onCreate}>Criar Conta</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n            <Footer></Footer>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return  this.renderCreateUser();\r\n    }\r\n}\r\n\r\nexport default RegistroForm;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport PostList from \"../PostList\";\r\nimport PostForm from \"../PostForm\";\r\nimport PostPage from \"../PostPage\";\r\nimport {HashRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport LoginForm from \"../LoginForm\";\r\nimport {auth} from '../../firebase';\r\nimport NavBar from '../../component/NavBar';\r\nimport PerfilPage from '../PerfilPage';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport RegistroForm from '../RegistroForm';\r\nimport Footer from '../../component/Footer';\r\n\r\n\r\nfunction loggedIn() {\r\n    return localStorage.reactBlogUid;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, render = null, children = null, ...rest }) => {\r\n    let renderMethod = render || children;\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            loggedIn() ?\r\n                (renderMethod ? renderMethod(props) : <Component {...props} />)\r\n                : <Redirect to='/login'/>)}\r\n        />\r\n    )\r\n}\r\n\r\nclass App extends React.Component {\r\n    setupAxios() {\r\n        axios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\n        axios.defaults.headers.post[\"Content-Type\"] = 'application/json';\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setupAxios();\r\n        auth.onAuthStateChanged((user) => {\r\n            console.log(\"STATE CHANGED:\"  + JSON.stringify(user));\r\n            if (user == null || user.emailVerified === false) {\r\n                localStorage.removeItem(\"reactBlogUid\");\r\n                localStorage.removeItem(\"reactBlogUDisplayName\");\r\n                localStorage.removeItem(\"reactBlobUEmail\");\r\n                return;\r\n            }\r\n            localStorage.user = {user};\r\n            localStorage.reactBlogUid = user.uid;\r\n            localStorage.reactBlogUDisplayName = user.displayName;\r\n            localStorage.reactBlobUEmail = user.email;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Menu} />\r\n                        <Route exact path=\"/posts\" component={PostList}/>\r\n                        <PrivateRoute exact path=\"/posts/:id\" component={PostForm} />\r\n                        <Route exact path=\"/post/:id\" component={PostPage}/>\r\n                        <Route exact path=\"/login\" component={LoginForm} />\r\n                        <Route exact path=\"/registro\" component={RegistroForm} />\r\n                        <PrivateRoute exact path=\"/perfil/:displayName\" component={PerfilPage} />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nfunction Menu(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <NavBar></NavBar>\r\n            <PostList></PostList>\r\n            <Footer></Footer>\r\n        </React.Fragment>\r\n        \r\n        \r\n                \r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. Index is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './page/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}